version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: wallet-intents-postgres
    environment:
      POSTGRES_USER: wallet_intents
      POSTGRES_PASSWORD: wallet_intents_password
      POSTGRES_DB: wallet_intents
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wallet_intents"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wallet-intents-network

  # Kafka and Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: wallet-intents-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - wallet-intents-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: wallet-intents-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - wallet-intents-network

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: wallet-intents-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: wallet-intents-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - wallet-intents-network

  # Backend Service
  backend-service:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile.backend
    container_name: wallet-intents-backend
    depends_on:
      - postgres
      - kafka
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://wallet_intents:wallet_intents_password@postgres:5432/wallet_intents
      KAFKA_BROKERS: kafka:9092
      SANDSHREW_URL: ${SANDSHREW_URL:-https://mainnet.sandshrew.io/v2/default}
    volumes:
      - ./infrastructure/backend-service:/app
      - /app/node_modules
    networks:
      - wallet-intents-network

  # Sandshrew Proxy (optional, for local development)
  sandshrew-proxy:
    image: node:18-alpine
    container_name: wallet-intents-sandshrew-proxy
    working_dir: /app
    command: sh -c "npm install && npm start"
    ports:
      - "18888:18888"
    volumes:
      - ./reference/sandshrew-proxy:/app
    networks:
      - wallet-intents-network

networks:
  wallet-intents-network:
    driver: bridge

volumes:
  postgres_data: